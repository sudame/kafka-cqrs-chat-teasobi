services:
  ##########################################
  # データ保持層: 各ツールデフォルトのポートを使用
  ##########################################
  kafka:
    image: apache/kafka:3.9.1
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,CONTROLLER://localhost:9093,PLAINTEXT_INTERNAL://kafka:29092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@localhost:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    healthcheck:
      # Kafkaのツールを使ってトピック一覧を取得しようと試みる
      test:
        [
          'CMD-SHELL',
          '/opt/kafka/bin/kafka-topics.sh --bootstrap-server localhost:9092 --list',
        ]
      interval: 10s # 10秒ごとにチェック
      timeout: 5s # タイムアウトは5秒
      retries: 15 # 15回リトライ (合計約150秒待つ)

  mysql:
    image: mysql:9.3.0
    restart: always
    container_name: mysql
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_USER: user
      MYSQL_PASSWORD: password
      MYSQL_ALLOW_EMPTY_PASSWORD: yes
      MYSQL_DATABASE: chotwork

  ##########################################
  # Webアプリケーション: 80xx番台のポートを使用
  ##########################################
  query-server:
    build:
      context: .
      dockerfile: ./backend/query/Dockerfile
    container_name: query-server
    ports:
      - '8080:8080'
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:29092

  command-server:
    build:
      context: .
      dockerfile: ./backend/command/Dockerfile
    container_name: command-server
    ports:
      - '8081:8081'
      - '9229:9229' # デバッグ用ポート
    depends_on:
      kafka:
        condition: service_healthy
    environment:
      KAFKA_BROKER: kafka:29092

  read-model-updater-server:
    build:
      context: .
      dockerfile: ./backend/read-model-updater/Dockerfile
    container_name: read-model-updater-server
    ports:
      - '8082:8082'
    depends_on:
      - kafka
    environment:
      KAFKA_BROKER: kafka:29092

  ##########################################
  # 開発用ツール: 81xx番台のポートを使用
  ##########################################
  phpmyadmin:
    image: phpmyadmin:5.2.2
    container_name: phpmyadmin
    restart: always
    depends_on:
      - mysql
    ports:
      - '8180:80'
    environment:
      PMA_HOST: mysql
      PMA_USER: user
      PMA_PASSWORD: password
      PMA_AUTH_TYPE: config

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 8181:8080
    depends_on:
      - kafka
    restart: always
    environment:
      KAFKA_CLUSTERS_0_NAME: kafka
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
